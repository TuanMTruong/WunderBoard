
wunder_usart_polling.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  000001e4  00000278  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001e4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000068  00800100  00800100  00000278  2**0
                  ALLOC
  3 .stab         000006cc  00000000  00000000  00000278  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000081  00000000  00000000  00000944  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000060  00000000  00000000  000009c8  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000243  00000000  00000000  00000a28  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000003c  00000000  00000000  00000c6b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000128  00000000  00000000  00000ca7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	4b c0       	rjmp	.+150    	; 0x98 <__ctors_end>
   2:	00 00       	nop
   4:	67 c0       	rjmp	.+206    	; 0xd4 <__bad_interrupt>
   6:	00 00       	nop
   8:	65 c0       	rjmp	.+202    	; 0xd4 <__bad_interrupt>
   a:	00 00       	nop
   c:	63 c0       	rjmp	.+198    	; 0xd4 <__bad_interrupt>
   e:	00 00       	nop
  10:	61 c0       	rjmp	.+194    	; 0xd4 <__bad_interrupt>
  12:	00 00       	nop
  14:	5f c0       	rjmp	.+190    	; 0xd4 <__bad_interrupt>
  16:	00 00       	nop
  18:	5d c0       	rjmp	.+186    	; 0xd4 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	5b c0       	rjmp	.+182    	; 0xd4 <__bad_interrupt>
  1e:	00 00       	nop
  20:	59 c0       	rjmp	.+178    	; 0xd4 <__bad_interrupt>
  22:	00 00       	nop
  24:	57 c0       	rjmp	.+174    	; 0xd4 <__bad_interrupt>
  26:	00 00       	nop
  28:	55 c0       	rjmp	.+170    	; 0xd4 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	53 c0       	rjmp	.+166    	; 0xd4 <__bad_interrupt>
  2e:	00 00       	nop
  30:	51 c0       	rjmp	.+162    	; 0xd4 <__bad_interrupt>
  32:	00 00       	nop
  34:	4f c0       	rjmp	.+158    	; 0xd4 <__bad_interrupt>
  36:	00 00       	nop
  38:	4d c0       	rjmp	.+154    	; 0xd4 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	4b c0       	rjmp	.+150    	; 0xd4 <__bad_interrupt>
  3e:	00 00       	nop
  40:	49 c0       	rjmp	.+146    	; 0xd4 <__bad_interrupt>
  42:	00 00       	nop
  44:	47 c0       	rjmp	.+142    	; 0xd4 <__bad_interrupt>
  46:	00 00       	nop
  48:	45 c0       	rjmp	.+138    	; 0xd4 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	43 c0       	rjmp	.+134    	; 0xd4 <__bad_interrupt>
  4e:	00 00       	nop
  50:	41 c0       	rjmp	.+130    	; 0xd4 <__bad_interrupt>
  52:	00 00       	nop
  54:	3f c0       	rjmp	.+126    	; 0xd4 <__bad_interrupt>
  56:	00 00       	nop
  58:	3d c0       	rjmp	.+122    	; 0xd4 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	3b c0       	rjmp	.+118    	; 0xd4 <__bad_interrupt>
  5e:	00 00       	nop
  60:	39 c0       	rjmp	.+114    	; 0xd4 <__bad_interrupt>
  62:	00 00       	nop
  64:	37 c0       	rjmp	.+110    	; 0xd4 <__bad_interrupt>
  66:	00 00       	nop
  68:	35 c0       	rjmp	.+106    	; 0xd4 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	33 c0       	rjmp	.+102    	; 0xd4 <__bad_interrupt>
  6e:	00 00       	nop
  70:	31 c0       	rjmp	.+98     	; 0xd4 <__bad_interrupt>
  72:	00 00       	nop
  74:	2f c0       	rjmp	.+94     	; 0xd4 <__bad_interrupt>
  76:	00 00       	nop
  78:	2d c0       	rjmp	.+90     	; 0xd4 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	2b c0       	rjmp	.+86     	; 0xd4 <__bad_interrupt>
  7e:	00 00       	nop
  80:	29 c0       	rjmp	.+82     	; 0xd4 <__bad_interrupt>
  82:	00 00       	nop
  84:	27 c0       	rjmp	.+78     	; 0xd4 <__bad_interrupt>
  86:	00 00       	nop
  88:	25 c0       	rjmp	.+74     	; 0xd4 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	23 c0       	rjmp	.+70     	; 0xd4 <__bad_interrupt>
  8e:	00 00       	nop
  90:	21 c0       	rjmp	.+66     	; 0xd4 <__bad_interrupt>
  92:	00 00       	nop
  94:	1f c0       	rjmp	.+62     	; 0xd4 <__bad_interrupt>
  96:	00 00       	nop

00000098 <__ctors_end>:
  98:	11 24       	eor	r1, r1
  9a:	1f be       	out	0x3f, r1	; 63
  9c:	cf ef       	ldi	r28, 0xFF	; 255
  9e:	d0 e2       	ldi	r29, 0x20	; 32
  a0:	de bf       	out	0x3e, r29	; 62
  a2:	cd bf       	out	0x3d, r28	; 61

000000a4 <__do_copy_data>:
  a4:	11 e0       	ldi	r17, 0x01	; 1
  a6:	a0 e0       	ldi	r26, 0x00	; 0
  a8:	b1 e0       	ldi	r27, 0x01	; 1
  aa:	e4 ee       	ldi	r30, 0xE4	; 228
  ac:	f1 e0       	ldi	r31, 0x01	; 1
  ae:	00 e0       	ldi	r16, 0x00	; 0
  b0:	0b bf       	out	0x3b, r16	; 59
  b2:	02 c0       	rjmp	.+4      	; 0xb8 <__do_copy_data+0x14>
  b4:	07 90       	elpm	r0, Z+
  b6:	0d 92       	st	X+, r0
  b8:	a0 30       	cpi	r26, 0x00	; 0
  ba:	b1 07       	cpc	r27, r17
  bc:	d9 f7       	brne	.-10     	; 0xb4 <__do_copy_data+0x10>
  be:	1b be       	out	0x3b, r1	; 59

000000c0 <__do_clear_bss>:
  c0:	11 e0       	ldi	r17, 0x01	; 1
  c2:	a0 e0       	ldi	r26, 0x00	; 0
  c4:	b1 e0       	ldi	r27, 0x01	; 1
  c6:	01 c0       	rjmp	.+2      	; 0xca <.do_clear_bss_start>

000000c8 <.do_clear_bss_loop>:
  c8:	1d 92       	st	X+, r1

000000ca <.do_clear_bss_start>:
  ca:	a8 36       	cpi	r26, 0x68	; 104
  cc:	b1 07       	cpc	r27, r17
  ce:	e1 f7       	brne	.-8      	; 0xc8 <.do_clear_bss_loop>
  d0:	0d d0       	rcall	.+26     	; 0xec <main>
  d2:	86 c0       	rjmp	.+268    	; 0x1e0 <_exit>

000000d4 <__bad_interrupt>:
  d4:	95 cf       	rjmp	.-214    	; 0x0 <__vectors>

000000d6 <ClearRingBuffer>:
  d6:	80 e0       	ldi	r24, 0x00	; 0
  d8:	90 e0       	ldi	r25, 0x00	; 0
  da:	fc 01       	movw	r30, r24
  dc:	ec 5f       	subi	r30, 0xFC	; 252
  de:	fe 4f       	sbci	r31, 0xFE	; 254
  e0:	10 82       	st	Z, r1
  e2:	01 96       	adiw	r24, 0x01	; 1
  e4:	84 36       	cpi	r24, 0x64	; 100
  e6:	91 05       	cpc	r25, r1
  e8:	c1 f7       	brne	.-16     	; 0xda <ClearRingBuffer+0x4>
  ea:	08 95       	ret

000000ec <main>:
  ec:	49 d0       	rcall	.+146    	; 0x180 <Initialize>
  ee:	53 d0       	rcall	.+166    	; 0x196 <SetupSPI>
  f0:	55 d0       	rcall	.+170    	; 0x19c <SetupUSART>
  f2:	c1 e0       	ldi	r28, 0x01	; 1
  f4:	d0 e0       	ldi	r29, 0x00	; 0
  f6:	80 91 c8 00 	lds	r24, 0x00C8
  fa:	87 ff       	sbrs	r24, 7
  fc:	2d c0       	rjmp	.+90     	; 0x158 <main+0x6c>
  fe:	88 b1       	in	r24, 0x08	; 8
 100:	80 95       	com	r24
 102:	88 b9       	out	0x08, r24	; 8
 104:	80 91 00 01 	lds	r24, 0x0100
 108:	90 91 01 01 	lds	r25, 0x0101
 10c:	84 36       	cpi	r24, 0x64	; 100
 10e:	91 05       	cpc	r25, r1
 110:	21 f4       	brne	.+8      	; 0x11a <main+0x2e>
 112:	10 92 01 01 	sts	0x0101, r1
 116:	10 92 00 01 	sts	0x0100, r1
 11a:	e0 91 00 01 	lds	r30, 0x0100
 11e:	f0 91 01 01 	lds	r31, 0x0101
 122:	80 91 ce 00 	lds	r24, 0x00CE
 126:	ec 5f       	subi	r30, 0xFC	; 252
 128:	fe 4f       	sbci	r31, 0xFE	; 254
 12a:	80 83       	st	Z, r24
 12c:	e0 91 00 01 	lds	r30, 0x0100
 130:	f0 91 01 01 	lds	r31, 0x0101
 134:	ec 5f       	subi	r30, 0xFC	; 252
 136:	fe 4f       	sbci	r31, 0xFE	; 254
 138:	80 81       	ld	r24, Z
 13a:	8a 30       	cpi	r24, 0x0A	; 10
 13c:	21 f4       	brne	.+8      	; 0x146 <main+0x5a>
 13e:	d0 93 03 01 	sts	0x0103, r29
 142:	c0 93 02 01 	sts	0x0102, r28
 146:	80 91 00 01 	lds	r24, 0x0100
 14a:	90 91 01 01 	lds	r25, 0x0101
 14e:	01 96       	adiw	r24, 0x01	; 1
 150:	90 93 01 01 	sts	0x0101, r25
 154:	80 93 00 01 	sts	0x0100, r24
 158:	80 91 02 01 	lds	r24, 0x0102
 15c:	90 91 03 01 	lds	r25, 0x0103
 160:	81 30       	cpi	r24, 0x01	; 1
 162:	91 05       	cpc	r25, r1
 164:	41 f6       	brne	.-112    	; 0xf6 <main+0xa>
 166:	10 92 03 01 	sts	0x0103, r1
 16a:	10 92 02 01 	sts	0x0102, r1
 16e:	10 92 01 01 	sts	0x0101, r1
 172:	10 92 00 01 	sts	0x0100, r1
 176:	84 e0       	ldi	r24, 0x04	; 4
 178:	91 e0       	ldi	r25, 0x01	; 1
 17a:	27 d0       	rcall	.+78     	; 0x1ca <SendStringUSART>
 17c:	ac df       	rcall	.-168    	; 0xd6 <ClearRingBuffer>
 17e:	bb cf       	rjmp	.-138    	; 0xf6 <main+0xa>

00000180 <Initialize>:
 180:	11 b8       	out	0x01, r1	; 1
 182:	8e e8       	ldi	r24, 0x8E	; 142
 184:	84 b9       	out	0x04, r24	; 4
 186:	8f ef       	ldi	r24, 0xFF	; 255
 188:	87 b9       	out	0x07, r24	; 7
 18a:	88 e0       	ldi	r24, 0x08	; 8
 18c:	8a b9       	out	0x0a, r24	; 10
 18e:	87 e0       	ldi	r24, 0x07	; 7
 190:	8d b9       	out	0x0d, r24	; 13
 192:	10 ba       	out	0x10, r1	; 16
 194:	08 95       	ret

00000196 <SetupSPI>:
 196:	80 e7       	ldi	r24, 0x70	; 112
 198:	8c bd       	out	0x2c, r24	; 44
 19a:	08 95       	ret

0000019c <SetupUSART>:
 19c:	82 e0       	ldi	r24, 0x02	; 2
 19e:	80 93 c8 00 	sts	0x00C8, r24
 1a2:	88 e1       	ldi	r24, 0x18	; 24
 1a4:	80 93 c9 00 	sts	0x00C9, r24
 1a8:	86 e0       	ldi	r24, 0x06	; 6
 1aa:	80 93 ca 00 	sts	0x00CA, r24
 1ae:	8c e0       	ldi	r24, 0x0C	; 12
 1b0:	90 e0       	ldi	r25, 0x00	; 0
 1b2:	90 93 cd 00 	sts	0x00CD, r25
 1b6:	80 93 cc 00 	sts	0x00CC, r24
 1ba:	08 95       	ret

000001bc <SendByteUSART>:
 1bc:	90 91 c8 00 	lds	r25, 0x00C8
 1c0:	95 ff       	sbrs	r25, 5
 1c2:	fc cf       	rjmp	.-8      	; 0x1bc <SendByteUSART>
 1c4:	80 93 ce 00 	sts	0x00CE, r24
 1c8:	08 95       	ret

000001ca <SendStringUSART>:
 1ca:	cf 93       	push	r28
 1cc:	df 93       	push	r29
 1ce:	ec 01       	movw	r28, r24
 1d0:	01 c0       	rjmp	.+2      	; 0x1d4 <SendStringUSART+0xa>
 1d2:	f4 df       	rcall	.-24     	; 0x1bc <SendByteUSART>
 1d4:	89 91       	ld	r24, Y+
 1d6:	88 23       	and	r24, r24
 1d8:	e1 f7       	brne	.-8      	; 0x1d2 <SendStringUSART+0x8>
 1da:	df 91       	pop	r29
 1dc:	cf 91       	pop	r28
 1de:	08 95       	ret

000001e0 <_exit>:
 1e0:	f8 94       	cli

000001e2 <__stop_program>:
 1e2:	ff cf       	rjmp	.-2      	; 0x1e2 <__stop_program>
