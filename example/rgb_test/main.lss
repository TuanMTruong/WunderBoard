
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00000186  000001fa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000186  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000011  00000000  00000000  000001fa  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000020  00000000  00000000  00000210  2**3
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   000000bf  00000000  00000000  00000230  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000014  00000000  00000000  000002ef  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000058  00000000  00000000  00000303  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	4b c0       	rjmp	.+150    	; 0x98 <__ctors_end>
   2:	00 00       	nop
   4:	51 c0       	rjmp	.+162    	; 0xa8 <__bad_interrupt>
   6:	00 00       	nop
   8:	4f c0       	rjmp	.+158    	; 0xa8 <__bad_interrupt>
   a:	00 00       	nop
   c:	4d c0       	rjmp	.+154    	; 0xa8 <__bad_interrupt>
   e:	00 00       	nop
  10:	4b c0       	rjmp	.+150    	; 0xa8 <__bad_interrupt>
  12:	00 00       	nop
  14:	49 c0       	rjmp	.+146    	; 0xa8 <__bad_interrupt>
  16:	00 00       	nop
  18:	47 c0       	rjmp	.+142    	; 0xa8 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	45 c0       	rjmp	.+138    	; 0xa8 <__bad_interrupt>
  1e:	00 00       	nop
  20:	43 c0       	rjmp	.+134    	; 0xa8 <__bad_interrupt>
  22:	00 00       	nop
  24:	41 c0       	rjmp	.+130    	; 0xa8 <__bad_interrupt>
  26:	00 00       	nop
  28:	3f c0       	rjmp	.+126    	; 0xa8 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	3d c0       	rjmp	.+122    	; 0xa8 <__bad_interrupt>
  2e:	00 00       	nop
  30:	3b c0       	rjmp	.+118    	; 0xa8 <__bad_interrupt>
  32:	00 00       	nop
  34:	39 c0       	rjmp	.+114    	; 0xa8 <__bad_interrupt>
  36:	00 00       	nop
  38:	37 c0       	rjmp	.+110    	; 0xa8 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	35 c0       	rjmp	.+106    	; 0xa8 <__bad_interrupt>
  3e:	00 00       	nop
  40:	33 c0       	rjmp	.+102    	; 0xa8 <__bad_interrupt>
  42:	00 00       	nop
  44:	31 c0       	rjmp	.+98     	; 0xa8 <__bad_interrupt>
  46:	00 00       	nop
  48:	2f c0       	rjmp	.+94     	; 0xa8 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	2d c0       	rjmp	.+90     	; 0xa8 <__bad_interrupt>
  4e:	00 00       	nop
  50:	2b c0       	rjmp	.+86     	; 0xa8 <__bad_interrupt>
  52:	00 00       	nop
  54:	29 c0       	rjmp	.+82     	; 0xa8 <__bad_interrupt>
  56:	00 00       	nop
  58:	27 c0       	rjmp	.+78     	; 0xa8 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	25 c0       	rjmp	.+74     	; 0xa8 <__bad_interrupt>
  5e:	00 00       	nop
  60:	23 c0       	rjmp	.+70     	; 0xa8 <__bad_interrupt>
  62:	00 00       	nop
  64:	21 c0       	rjmp	.+66     	; 0xa8 <__bad_interrupt>
  66:	00 00       	nop
  68:	1f c0       	rjmp	.+62     	; 0xa8 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	1d c0       	rjmp	.+58     	; 0xa8 <__bad_interrupt>
  6e:	00 00       	nop
  70:	1b c0       	rjmp	.+54     	; 0xa8 <__bad_interrupt>
  72:	00 00       	nop
  74:	19 c0       	rjmp	.+50     	; 0xa8 <__bad_interrupt>
  76:	00 00       	nop
  78:	17 c0       	rjmp	.+46     	; 0xa8 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	15 c0       	rjmp	.+42     	; 0xa8 <__bad_interrupt>
  7e:	00 00       	nop
  80:	13 c0       	rjmp	.+38     	; 0xa8 <__bad_interrupt>
  82:	00 00       	nop
  84:	11 c0       	rjmp	.+34     	; 0xa8 <__bad_interrupt>
  86:	00 00       	nop
  88:	0f c0       	rjmp	.+30     	; 0xa8 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	0d c0       	rjmp	.+26     	; 0xa8 <__bad_interrupt>
  8e:	00 00       	nop
  90:	0b c0       	rjmp	.+22     	; 0xa8 <__bad_interrupt>
  92:	00 00       	nop
  94:	09 c0       	rjmp	.+18     	; 0xa8 <__bad_interrupt>
  96:	00 00       	nop

00000098 <__ctors_end>:
  98:	11 24       	eor	r1, r1
  9a:	1f be       	out	0x3f, r1	; 63
  9c:	cf ef       	ldi	r28, 0xFF	; 255
  9e:	d0 e2       	ldi	r29, 0x20	; 32
  a0:	de bf       	out	0x3e, r29	; 62
  a2:	cd bf       	out	0x3d, r28	; 61
  a4:	08 d0       	rcall	.+16     	; 0xb6 <main>
  a6:	6d c0       	rjmp	.+218    	; 0x182 <_exit>

000000a8 <__bad_interrupt>:
  a8:	ab cf       	rjmp	.-170    	; 0x0 <__vectors>

000000aa <init>:
  aa:	11 b8       	out	0x01, r1	; 1
  ac:	8f ef       	ldi	r24, 0xFF	; 255
  ae:	84 b9       	out	0x04, r24	; 4
  b0:	87 b9       	out	0x07, r24	; 7
  b2:	8d b9       	out	0x0d, r24	; 13
  b4:	08 95       	ret

000000b6 <main>:
  b6:	f9 df       	rcall	.-14     	; 0xaa <init>
  b8:	20 d0       	rcall	.+64     	; 0xfa <init_display>
  ba:	18 b8       	out	0x08, r1	; 8
  bc:	88 b1       	in	r24, 0x08	; 8
  be:	8f 5f       	subi	r24, 0xFF	; 255
  c0:	88 b9       	out	0x08, r24	; 8
  c2:	4f ef       	ldi	r20, 0xFF	; 255
  c4:	60 e0       	ldi	r22, 0x00	; 0
  c6:	80 e0       	ldi	r24, 0x00	; 0
  c8:	41 d0       	rcall	.+130    	; 0x14c <fill_display>
  ca:	f8 cf       	rjmp	.-16     	; 0xbc <main+0x6>

000000cc <setup_SPI>:
  cc:	94 b1       	in	r25, 0x04	; 4
  ce:	97 60       	ori	r25, 0x07	; 7
  d0:	94 b9       	out	0x04, r25	; 4
  d2:	23 98       	cbi	0x04, 3	; 4
  d4:	80 64       	ori	r24, 0x40	; 64
  d6:	8c bd       	out	0x2c, r24	; 44
  d8:	8c b5       	in	r24, 0x2c	; 44
  da:	08 95       	ret

000000dc <send_SPI_byte>:
  dc:	8e bd       	out	0x2e, r24	; 46
  de:	0d b4       	in	r0, 0x2d	; 45
  e0:	07 fe       	sbrs	r0, 7
  e2:	fd cf       	rjmp	.-6      	; 0xde <send_SPI_byte+0x2>
  e4:	8e b5       	in	r24, 0x2e	; 46
  e6:	08 95       	ret

000000e8 <latch_display>:
  e8:	2f 9a       	sbi	0x05, 7	; 5
  ea:	89 ef       	ldi	r24, 0xF9	; 249
  ec:	90 e0       	ldi	r25, 0x00	; 0
  ee:	01 97       	sbiw	r24, 0x01	; 1
  f0:	f1 f7       	brne	.-4      	; 0xee <latch_display+0x6>
  f2:	00 c0       	rjmp	.+0      	; 0xf4 <latch_display+0xc>
  f4:	00 00       	nop
  f6:	2f 98       	cbi	0x05, 7	; 5
  f8:	08 95       	ret

000000fa <init_display>:
  fa:	cf 93       	push	r28
  fc:	df 93       	push	r29
  fe:	84 e1       	ldi	r24, 0x14	; 20
 100:	e5 df       	rcall	.-54     	; 0xcc <setup_SPI>
 102:	81 e0       	ldi	r24, 0x01	; 1
 104:	85 b9       	out	0x05, r24	; 5
 106:	c8 e0       	ldi	r28, 0x08	; 8
 108:	d0 e0       	ldi	r29, 0x00	; 0
 10a:	80 e0       	ldi	r24, 0x00	; 0
 10c:	e7 df       	rcall	.-50     	; 0xdc <send_SPI_byte>
 10e:	80 e0       	ldi	r24, 0x00	; 0
 110:	e5 df       	rcall	.-54     	; 0xdc <send_SPI_byte>
 112:	80 e0       	ldi	r24, 0x00	; 0
 114:	e3 df       	rcall	.-58     	; 0xdc <send_SPI_byte>
 116:	e8 df       	rcall	.-48     	; 0xe8 <latch_display>
 118:	21 97       	sbiw	r28, 0x01	; 1
 11a:	20 97       	sbiw	r28, 0x00	; 0
 11c:	b1 f7       	brne	.-20     	; 0x10a <init_display+0x10>
 11e:	df 91       	pop	r29
 120:	cf 91       	pop	r28
 122:	08 95       	ret

00000124 <line_display>:
 124:	cf 93       	push	r28
 126:	df 93       	push	r29
 128:	00 d0       	rcall	.+0      	; 0x12a <line_display+0x6>
 12a:	cd b7       	in	r28, 0x3d	; 61
 12c:	de b7       	in	r29, 0x3e	; 62
 12e:	2e b9       	out	0x0e, r18	; 14
 130:	4a 83       	std	Y+2, r20	; 0x02
 132:	69 83       	std	Y+1, r22	; 0x01
 134:	d3 df       	rcall	.-90     	; 0xdc <send_SPI_byte>
 136:	69 81       	ldd	r22, Y+1	; 0x01
 138:	86 2f       	mov	r24, r22
 13a:	d0 df       	rcall	.-96     	; 0xdc <send_SPI_byte>
 13c:	4a 81       	ldd	r20, Y+2	; 0x02
 13e:	84 2f       	mov	r24, r20
 140:	cd df       	rcall	.-102    	; 0xdc <send_SPI_byte>
 142:	0f 90       	pop	r0
 144:	0f 90       	pop	r0
 146:	df 91       	pop	r29
 148:	cf 91       	pop	r28
 14a:	ce cf       	rjmp	.-100    	; 0xe8 <latch_display>

0000014c <fill_display>:
 14c:	0f 93       	push	r16
 14e:	1f 93       	push	r17
 150:	cf 93       	push	r28
 152:	df 93       	push	r29
 154:	d8 2f       	mov	r29, r24
 156:	16 2f       	mov	r17, r22
 158:	04 2f       	mov	r16, r20
 15a:	c0 e0       	ldi	r28, 0x00	; 0
 15c:	2c 2f       	mov	r18, r28
 15e:	40 2f       	mov	r20, r16
 160:	61 2f       	mov	r22, r17
 162:	8d 2f       	mov	r24, r29
 164:	df df       	rcall	.-66     	; 0x124 <line_display>
 166:	89 ef       	ldi	r24, 0xF9	; 249
 168:	90 e0       	ldi	r25, 0x00	; 0
 16a:	01 97       	sbiw	r24, 0x01	; 1
 16c:	f1 f7       	brne	.-4      	; 0x16a <fill_display+0x1e>
 16e:	00 c0       	rjmp	.+0      	; 0x170 <fill_display+0x24>
 170:	00 00       	nop
 172:	cf 5f       	subi	r28, 0xFF	; 255
 174:	c8 30       	cpi	r28, 0x08	; 8
 176:	91 f7       	brne	.-28     	; 0x15c <fill_display+0x10>
 178:	df 91       	pop	r29
 17a:	cf 91       	pop	r28
 17c:	1f 91       	pop	r17
 17e:	0f 91       	pop	r16
 180:	08 95       	ret

00000182 <_exit>:
 182:	f8 94       	cli

00000184 <__stop_program>:
 184:	ff cf       	rjmp	.-2      	; 0x184 <__stop_program>
